version 0.005; 2007-01-25

  * add hex_float() function to input floating point values in hexadecimal

  * add IEEE 754 function signbit()

  * float_id_cmp(): tighten specification of return values to match
    Perl's <=> operator (actual behaviour always matched the tighter spec,
    it just wasn't documented and tested)

  * in documentation, note that the string values of float arguments
    are ignored

  * in documentation, clarify note about implicit conversion of integer
    to float

  * in documentation, note that both arguments to nextafter() must be
    floating point values

  * in documentation, note standard nature of signbit(), copysign(),
    and nextafter()

  * in documentation, note float_id_cmp()'s relation to the IEEE 754r
    function totalorder()

  * in documentation, note that Perl does not distinguish between
    different NaNs

  * in documentation, give a second definition of max_integer (equivalent
    to the first)

  * add test for consistency of constants

  * in documentation, reference Scalar::Number

  * remove now-useless test t/use.t

version 0.004; 2007-01-12

  * bugfix: correct value for max_integer to 2^(significand_bits+1),
    and correct its description in the documentation

  * make pos_zero and neg_zero constants into non-constant functions
    that return fresh floating point zeroes, if running on a Perl where
    floating point zeroes can transmogrify into integer zeroes

  * add float_id_cmp() function for total ordering of floats

  * in documentation, more details of behaviour of zeroes

  * in documentation, discussion of interaction with native integer values

  * in documentation, note truncating behaviour of the % operator

  * in documentation, note the slightly misleading nature of the names
    "significand_bits" and "max_integer"

  * reference Data::Integer and perlnumber(1) in documentation

version 0.003; 2006-08-08

  * float_hex(): add OPTIONS parameter to control details of output
    formatting

  * when looking for NaNs, see whether the string "nan" qualifies

  * slight clarification to documentation of significand_step

version 0.002; 2006-08-03

  * bugfix: in mult_pow2(), copysign(), and nextafter(), take care
    to return a pristine signed zero when returning zero: they were
    returning zeroes that got broken (due to the Perl bug noted in the
    documentation) by internal arithmetic

version 0.001; 2006-08-01

  * add IEEE 754 functions copysign() and nextafter()

  * test sign of zero using sprintf() to avoid being confused by dualvars

  * slight expansion of initial paragraph of documentation

version 0.000; 2006-07-30

  * initial released version
